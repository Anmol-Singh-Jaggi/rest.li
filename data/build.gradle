plugins {
  id "me.champeau.gradle.jmh" version "0.4.8"
}

apply plugin: 'antlr'

dependencies {
  compile project(':entity-stream')
  compile externalDependency.antlrRuntime
  compile externalDependency.commonsLang3
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonSmile

  testCompile project(':data-testutils')
  testCompile externalDependency.commonsIo
  testCompile externalDependency.testng

  antlr externalDependency.antlr

  jmh 'org.openjdk.jmh:jmh-core:1.21'
  jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.21'

  jmh project(':data')
}


test {
  maxHeapSize = '4g'

  forkEvery = 1
  maxParallelForks = 4
}

def generatedAntlrDir = file("src/mainGeneratedAntlr")
def generatedAntlrJavaDir = file("${generatedAntlrDir}/java")

generateGrammarSource {
  outputDirectory = file("${generatedAntlrJavaDir}/com/linkedin/data/schema/grammar")
}

sourceSets.main.java {
  srcDir generatedAntlrJavaDir
}

idea.module {
  generatedSourceDirs += generatedAntlrJavaDir
}

clean {
  delete generatedAntlrDir
}

jmh {
  // keep these locked to make the build work
  duplicateClassesStrategy = DuplicatesStrategy.WARN
  includeTests = true

  // ok to tweak these for your benchmarking
  forceGC = true
  fork = 3
  warmupIterations = 2
  iterations = 3
}

tasks.compileJmhJava.dependsOn(':data:compileTestJava')
